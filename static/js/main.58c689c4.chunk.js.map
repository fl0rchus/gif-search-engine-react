{"version":3,"sources":["components/AddCategory.js","helpers/getGif.js","components/GifGridItem.js","components/Spinner.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","props","useState","inputValue","setInputValue","handleSubmit","e","preventDefault","trim","length","setCategories","cats","onSubmit","type","value","onChange","target","className","getGif","category","a","url","encodeURI","fetch","res","json","data","gifs","map","img","id","images","downsized_medium","user","username","title","GifGridItem","src","alt","Spinner","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","index","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oMAGaA,EAAc,SAACC,GAAW,IAAD,EACAC,mBAAS,IADT,mBAC7BC,EAD6B,KACjBC,EADiB,KAQ9BC,EAAe,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,EAAMS,eAAc,SAACC,GAAD,OAAWR,GAAX,mBAA0BQ,OAC9CP,EAAc,MAIlB,OACE,mCACE,uBAAMQ,SAAUP,EAAhB,UACE,uBAAOQ,KAAK,OAAOC,MAAOX,EAAYY,SAhBvB,SAACT,GACpB,IAAMQ,EAAQR,EAAEU,OAAOF,MACvBV,EAAcU,MAeV,wBAAQF,SAAUP,EAAcY,UAAU,MAA1C,0B,8BCvBKC,EAAM,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACdC,EADc,0FAC2EC,UAC7FH,GAFkB,sBAIFI,MAAMF,GAJJ,cAIdG,EAJc,gBAKGA,EAAIC,OALP,uBAKZC,EALY,EAKZA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GACrB,MAAO,CACLC,GAAID,EAAIC,GACRT,IAAKQ,EAAIE,OAAOC,iBAAiBX,IACjCY,KAAMJ,EAAIK,SACVC,MAAON,EAAIM,UAZK,kBAebR,GAfa,4CAAH,sDCENS,EAAc,SAAC,GAA8B,IAA5Bf,EAA2B,EAA3BA,IAAKY,EAAsB,EAAtBA,KAAME,EAAgB,EAAhBA,MAAgB,EAATL,GAC9C,OACE,sBAAKb,UAAU,+CAAf,UACE,qBAAKoB,IAAKhB,EAAKiB,IAAKH,IACpB,mBAAGlB,UAAU,YAAb,SAA0BkB,IAC1B,mBAAGlB,UAAU,WAAb,SAAyBgB,QCLlBM,EAAU,WACrB,OACE,sBAAKtB,UAAU,UAAf,UACE,qBAAKA,UAAU,mBACf,qBAAKA,UAAU,uBCDRuB,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECFb,SAACA,GAAc,IAAD,EACdjB,mBAAS,CACjCwB,KAAM,GACNe,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAexC,OATAC,qBAAU,WACR1B,EAAOC,GAAU0B,MAAK,SAACC,GAAD,OACpBH,EAAS,CACPjB,KAAMoB,EACNL,SAAS,SAGZ,CAACtB,IAEGuB,EDZmBK,CAAa5B,GAA/BO,EAD+B,EAC/BA,KAAMe,EADyB,EACzBA,QAEd,OACE,gCACE,oBAAIxB,UAAU,eAAd,SAA8BE,IAC7BsB,GAAW,cAAC,EAAD,IACZ,qBAAKxB,UAAU,WAAf,SACGS,EAAKE,KAAI,SAACC,EAAKmB,GAAN,OACR,wBAAC,EAAD,2BAAiBnB,GAAjB,IAAsBoB,IAAKD,cEOtBE,EAjBM,WAAO,IAAD,EACWhD,mBAAS,IADpB,mBAClBiD,EADkB,KACNzC,EADM,KAGzB,OACE,gCACE,mDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BACGyC,EAAWvB,KAAI,SAACT,EAAU6B,GAAX,OACd,cAAC,EAAD,CAAS7B,SAAUA,GAAe6B,Y,MCV5CI,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.58c689c4.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = (props) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    const value = e.target.value;\r\n    setInputValue(value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue.trim().length > 2) {\r\n      props.setCategories((cats) => [inputValue, ...cats]);\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit}>\r\n        <input type=\"text\" value={inputValue} onChange={handleChange} />\r\n        <button onSubmit={handleSubmit} className=\"btn\">\r\n          Search\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n","export const getGif = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?api_key=zXJA7w1l9qHi1tlGl5RDxtDhAUrsXcCi&q=${encodeURI(\r\n    category\r\n  )}&limit=12`;\r\n  const res = await fetch(url);\r\n  const { data } = await res.json();\r\n\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      url: img.images.downsized_medium.url,\r\n      user: img.username,\r\n      title: img.title,\r\n    };\r\n  });\r\n  return gifs;\r\n};\r\n","import React from \"react\";\r\n\r\nexport const GifGridItem = ({ url, user, title, id }) => {\r\n  return (\r\n    <div className=\"gif-item animate__animated animate__fadeInUp\">\r\n      <img src={url} alt={title} />\r\n      <p className=\"gif-title\">{title}</p>\r\n      <p className=\"gif-user\">{user}</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Spinner = () => {\r\n  return (\r\n    <div className=\"spinner\">\r\n      <div className=\"double-bounce1\"></div>\r\n      <div className=\"double-bounce2\"></div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\nimport { Spinner } from \"./Spinner\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  const { data, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <div>\r\n      <h3 className=\"gif-category\">{category}</h3>\r\n      {loading && <Spinner />}\r\n      <div className=\"gif-grid\">\r\n        {data.map((img, index) => (\r\n          <GifGridItem {...img} key={index} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGif } from \"../helpers/getGif\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setstate] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGif(category).then((imgs) =>\r\n      setstate({\r\n        data: imgs,\r\n        loading: false,\r\n      })\r\n    );\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Gif Search Engine</h1>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n\r\n      <ol>\r\n        {categories.map((category, index) => (\r\n          <GifGrid category={category} key={index} />\r\n        ))}\r\n      </ol>\r\n    </div>\r\n  );\r\n};\r\nexport default GifExpertApp;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport GifExpertApp from \"./GifExpertApp\";\nimport \"./index.css\";\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}